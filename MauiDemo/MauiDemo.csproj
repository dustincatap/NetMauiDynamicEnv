<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFrameworks>net7.0-android;net7.0-ios;net7.0-maccatalyst</TargetFrameworks>
        <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net7.0-windows10.0.19041.0</TargetFrameworks>
        <!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
        <!-- <TargetFrameworks>$(TargetFrameworks);net7.0-tizen</TargetFrameworks> -->
        <OutputType>Exe</OutputType>
        <RootNamespace>MauiDemo</RootNamespace>
        <UseMaui>true</UseMaui>
        <SingleProject>true</SingleProject>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <LangVersion>11</LangVersion>
        <ApplicationIdGuid>9911004e-28dc-4a16-8e1b-9401a3554f1b</ApplicationIdGuid>

        <!-- Versions -->
        <ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
        <ApplicationVersion>1</ApplicationVersion>

        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
        <TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
        <Configurations>ReleaseDev;DebugDev;DebugProd</Configurations>
        <Platforms>AnyCPU</Platforms>
    </PropertyGroup>

    <ItemGroup>
        <!-- App Icon -->
        <MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

        <!-- Splash Screen -->
        <MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

        <!-- Images -->
        <MauiImage Include="Resources\Images\*" />
        <MauiImage Update="Resources\Images\dotnet_bot.svg" BaseSize="168,208" />

        <!-- Custom Fonts -->
        <MauiFont Include="Resources\Fonts\*" />

        <!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
        <MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
    </ItemGroup>

    <!-- Build Types -->
    <PropertyGroup Condition="$(Configuration.Contains('Debug'))">
        <DefineConstants>$(DefineConstants);DEBUG</DefineConstants>
        <DebugSymbols>true</DebugSymbols>
        <DefineDebug>true</DefineDebug>
        <DebugType>portable</DebugType>
        <Optimize>false</Optimize>
        <DefineTrace>true</DefineTrace>
        <EmbedAssembliesIntoApk>true</EmbedAssembliesIntoApk>
    </PropertyGroup>
    <PropertyGroup Condition="$(Configuration.Contains('Release'))">
        <DefineConstants>$(DefineConstants);RELEASE</DefineConstants>
        <DebugSymbols>false</DebugSymbols>
        <DefineDebug>false</DefineDebug>
        <DebugType>none</DebugType>
        <Optimize>true</Optimize>
        <DefineTrace>true</DefineTrace>
    </PropertyGroup>

    <!-- Environment Types -->
    <PropertyGroup Condition="$(Configuration.Contains('Dev'))">
        <AppEnv>dev</AppEnv>
        <DefineConstants>$(DefineConstants);DEV</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition="$(Configuration.Contains('Prod'))">
        <AppEnv>prod</AppEnv>
        <DefineConstants>$(DefineConstants);PROD</DefineConstants>
    </PropertyGroup>
    <PropertyGroup>
        <AppSettingsFile>appsettings.$(AppEnv).json</AppSettingsFile>
    </PropertyGroup>

    <!-- Add environment-specific appsettings.json file -->
    <ItemGroup>
        <None Remove="appsettings.*.json" />
        <EmbeddedResource Include="$(AppSettingsFile)" LogicalName="appsettings.json" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Autofac" Version="7.0.1" />
        <PackageReference Include="Autofac.Extensions.DependencyInjection" Version="8.0.0" />
        <PackageReference Include="CommunityToolkit.Maui" Version="5.1.0" />
        <PackageReference Include="CommunityToolkit.Mvvm" Version="8.2.0" />
        <PackageReference Include="JsonPeek" Version="1.2.0" />
        <PackageReference Include="Microsoft.Extensions.Configuration.Binder" Version="7.0.4" />
        <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="7.0.0" />
        <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="7.0.0" />
    </ItemGroup>

    <ItemGroup>
      <MauiXaml Update="Views\MainPage.xaml">
        <SubType>Designer</SubType>
      </MauiXaml>
    </ItemGroup>

    <ItemGroup>
      <Compile Update="Views\MainPage.xaml.cs">
        <DependentUpon>MainPage.xaml</DependentUpon>
        <SubType>Code</SubType>
      </Compile>
    </ItemGroup>

    <Target Name="ReadDefineConstants" BeforeTargets="Build">
        <Message Importance="high" Text="DefineConstants: $(DefineConstants)" />
    </Target>

    <!-- Read appsettings.json value -->
    <Target Name="ReadAppSettings" BeforeTargets="ProcessFrameworkReferences">
        <JsonPeek ContentPath="$(AppSettingsFile)" Query="$.AppEnv">
            <Output TaskParameter="Result" PropertyName="AppEnv" />
        </JsonPeek>
        <JsonPeek ContentPath="$(AppSettingsFile)" Query="$.AppIdSuffix">
            <Output TaskParameter="Result" PropertyName="AppIdSuffix" />
        </JsonPeek>
        <JsonPeek ContentPath="$(AppSettingsFile)" Query="$.AppName">
            <Output TaskParameter="Result" PropertyName="AppName" />
        </JsonPeek>

        <!-- Set MAUI Application Properties -->
        <PropertyGroup>
            <!-- Display name -->
            <ApplicationTitle>$(AppName)</ApplicationTitle>

            <!-- App Identifier -->
            <ApplicationId>com.companyname.mauidemo$(AppIdSuffix)</ApplicationId>
        </PropertyGroup>

        <Message Importance="high" Text="Building $(AppName) ($(ApplicationId))" />
    </Target>
</Project>
